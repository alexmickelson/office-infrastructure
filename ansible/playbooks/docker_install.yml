- name: Docker Installation and User Setup Playbook
  hosts: all
  become: true

  vars_files:
    - ../secrets.yml
    
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600

    # - name: Install required packages for Docker
    #   apt:
    #     name: "{{ item }}"
    #     state: present
    #   loop: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'gnupg-agent']

    # - name: Add docker apt repository key.
    #   ansible.builtin.get_url:
    #     url: https://download.docker.com/linux/ubuntu/gpg
    #     dest: /etc/apt/trusted.gpg.d/docker.asc
    #     mode: '0644'
    #     force: true

    # - name: Add Docker repository
    #   apt_repository:
    #     repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    #     state: present

    - name: Ensure the keyring directory exists
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
        
    - name: Add Docker's official GPG key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'

    - name: Add Docker repository to apt sources
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/docker.list
        create: yes
        line: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present

    - name: Update apt repository cache
      apt:
        update_cache: yes

    - name: Install Docker and related packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: expose docker metrics and setup image repository
      copy:
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: '0644'
        content: |
          {
            "metrics-addr": "0.0.0.0:9323",
            "insecure-registries":["144.17.92.12:5000"]
          }
      notify: restart docker


    # - name: install cadvisor
    #   apt:
    #     name: cadvisor
    #     state: latest
    #     update_cache: yes

    # - name: update cadvisor port
    #   copy:
    #     dest: /etc/default/cadvisor
    #     owner: root
    #     group: root
    #     mode: '0644'
    #     content: |
    #       CADVISOR_DOCKER_ENDPOINT="unix:///var/run/docker.sock"
    #       CADVISOR_PORT="9091"

    #       # Storage driver
    #       # Default: none/blank
    #       #
    #       # Available Options:
    #       #  - <empty>
    #       #  - bigquery
    #       #  - elasticsearch
    #       #  - kafka
    #       #  - redis
    #       #  - statsd
    #       #  - stdout
    #       CADVISOR_STORAGE_DRIVER=""

    #       # Storage driver host
    #       # Default: localhost:8086"
    #       CADVISOR_STORAGE_DRIVER_HOST="localhost:8086"

    #       # Storage driver password
    #       # Default: root
    #       CADVISOR_STORAGE_DRIVER_PASSWORD="root"

    #       # Storage driver secure connection
    #       # Default: false
    #       CADVISOR_STORAGE_DRIVER_SECURE="false"

    #       # Storage driver user
    #       # Default: root
    #       CADVISOR_STORAGE_DRIVER_USER="root"

    #       # Log to stderr ("true" logs to journal on systemd
    #       # and "false" to "/var/log/cadvisor.log" on SysV)
    #       # Default: true
    #       CADVISOR_LOG_TO_STDERR="true"

    #       # Other options:
    #       #DAEMON_ARGS=""
    #   notify: restart cadvisor

  handlers:
  # - name: restart cadvisor
  #   systemd:
  #     name: cadvisor
  #     state: restarted

  - name: restart docker
    service:
      name: docker
      state: restarted